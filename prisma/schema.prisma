generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ActivityStatus {
  ACTIVE
  INACTIVE
}

enum SaleStatus {
  PENDING
  PROCESSED
  ERROR
  CANCELED
  WAITING_PAYMENT
}

model ClientTokens {
  // Columns
  id                 Int                 @id @default(autoincrement()) @map("id")
  clientId           String              @map("client_id") @db.Uuid
  accessToken        String              @unique @map("access_token")
  activityStatus     ActivityStatus      @map("activity_status")
  createdAt          DateTime            @default(now()) @map("created_at")
  updatedAt          DateTime            @default(now()) @updatedAt @map("updated_at")
  deletedAt          DateTime?           @map("deleted_at")

  // Relations  
  client       Clients   @relation(fields: [clientId], references: [id])

  // Indexes
  @@index([accessToken], name: "idx_client_tokens_access_token")
  @@index([deletedAt], name: "idx_client_tokens_deleted_at")

  @@map("client_tokens")
}

model Clients {
  // Columns
  id                    String            @id @default(uuid()) @db.Uuid @map("id")
  code                  String            @unique @map("code") @db.VarChar(20)
  name                  String            @map("name") @db.VarChar(255)
  activityStatus        ActivityStatus    @map("activity_status")
  createdAt             DateTime          @default(now()) @map("created_at")
  updatedAt             DateTime          @default(now()) @updatedAt @map("updated_at")
  deletedAt             DateTime?         @map("deleted_at")

  // Relations
  sales        Sales[]
  clientTokens ClientTokens[]

  // Indexes
  @@index([deletedAt], name: "idx_clients_deleted_at")
  @@index([code], name: "idx_clients_code")
  @@index([name], name: "idx_clients_name")

  @@map("clients")
}

model Sales {
  // Columns
  id                String               @id @default(uuid()) @db.Uuid @map("id")
  authorizationCode String               @map("authorization_code") @db.VarChar(20)
  clientId          String               @map("client_id") @db.Uuid
  saleStatus        SaleStatus           @map("sale_status")
  value             Int                  @map("value")
  userCode          String               @map("user_code") @db.VarChar(11)
  saleDate          DateTime             @map("sale_date")
  cancelSaleDate    DateTime?            @map("cancel_sale_date")
  webhook           String               @map("webhook")
  origin            String               @map("origin")
  log               String?              @map("log")
  createdAt         DateTime             @default(now()) @map("created_at")
  updatedAt         DateTime             @default(now()) @updatedAt @map("updated_at")
  deletedAt         DateTime?            @map("deleted_at")

  // Relations
  client            Clients   @relation(fields: [clientId], references: [id])

  // Indexes
  @@index([deletedAt], name: "idx_sales_deleted_at")
  @@index([userCode], name: "idx_sales_user_code")
  @@index([saleStatus], name: "idx_sales_sale_status")
  @@index([saleDate], name: "idx_sales_sale_date")
  @@index([clientId], name: "idx_sales_client_id")

  // Constraints
  @@unique([saleDate, authorizationCode, saleStatus], name: "unique_sales_sale_date_authorization_code_sale_status")

  @@map("sales")
}
